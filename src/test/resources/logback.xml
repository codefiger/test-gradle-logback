<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>

<!-- 
Logback默认配置的步骤:

     (1). 尝试在 classpath 下查找文件 logback-test.xml；

     (2). 如果文件不存在，则查找文件 logback.xml；

     (3). 如果两个文件都不存在，logback 用 BasicConfigurator 自动对自己进行配置，这会导致记录输出到控制
     
     details:
   
    (1)Logback tries to find a file called logback.groovy in the classpath.

    (2)If no such file is found, logback tries to find a file called logback-test.xml in the classpath.

    (3)If no such file is found, it checks for the file logback.xml in the classpath..

    (4)If no such file is found, and the executing JVM has the ServiceLoader (JDK 6 and above) the ServiceLoader will be used to resolve an implementation of com.qos.logback.classic.spi.Configurator. The first implementation found will be used. See ServiceLoader documentation for more details.

    (5)If none of the above succeeds, logback configures itself automatically using the BasicConfigurator which will cause logging output to be directed to the console.
 -->

<!-- 
	 scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true
	 scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
	 debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 
-->
<configuration scan="true" scanPeriod="60000" debug="true">
 	<!-- 设置变量 -->
	<property name="LOG_DIR" value="/opt/logs/test-gradle-logback"/>
	<property name="APP_NAME" value="appName" />   
	
	<!-- 设置上下文名称 -->
	<contextName>${APP_NAME}</contextName>
	
	<!-- 获取时间戳字符串 -->
	<timestamp key="timeFormat" datePattern="yyyy-MM-dd HH:mm:ss"/> 
	
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">   
   		<!-- encoder 默认配置为PatternLayoutEncoder -->   
	    <encoder>   
	      <pattern>[${timeFormat}] [%-4level] %X{rpid} [%logger{50}] -> %msg %n%ex</pattern>   
	    </encoder>   
 	</appender> 
 	
 	 <!-- 按照每天生成日志文件 --> 
    <appender name="FILE_DAYILY" class="ch.qos.logback.core.rolling.RollingFileAppender"> 
        <Encoding>UTF-8</Encoding> 
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
            <FileNamePattern>${LOG_HOME}/myApp.%d{yyyy-MM-dd}.log</FileNamePattern> 
            <MaxHistory>30</MaxHistory> 
        </rollingPolicy> 
        <layout class="ch.qos.logback.classic.PatternLayout"> 
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] [%4level] %X{rpid} [%logger{50}]  -> %msg %n%ex</pattern> 
       </layout> 
    </appender>   
 	
 	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_DIR}/test-gradle-logback.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${LOG_DIR}/test-gradle-logback-%i.log</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>30</maxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<encoder charset="UTF-8">
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss}] [%4level] %X{rpid} [%logger{50}]  -> %msg %n%ex</Pattern>
		</encoder>
	</appender>
	
	<appender name ="FILE_ASYN" class= "ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold >0</discardingThreshold>
		<appender-ref ref ="FILE"/>
	</appender>
	
	<!--日志异步到数据库 未测试成功-->  
    <appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
        <!--日志异步到数据库 --> 
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
           <!--连接池 --> 
           <dataSource class="org.apache.commons.dbcp.BasicDataSource">
              <driverClass>org.postgresql.Driver</driverClass>
              <url>jdbc:postgresql://localhost:5432/postgres</url>
              <user>postgres</user>
              <password>123456</password>
            </dataSource>
        </connectionSource>
 	</appender> 
 	
 	<!-- 未设置打印级别，所以继承他上级<root>的日志级别；没有设置addtivity，默认为true，将此loger的打印信息向上级传递,测试即使false向上级传递-->
 	<logger name="com.zpeng.utils.LoggerDemo" level="info" addtivity="false">
 		<appender-ref ref="FILE" />   
 	</logger>
 
 	<logger name="com.zpeng.utils" level="error" addtivity="false">
 	</logger>
 	
 	<root level="debug">             
	    <appender-ref ref="STDOUT" />   
	</root>  
</configuration>